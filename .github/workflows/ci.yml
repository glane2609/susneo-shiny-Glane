name: R-CI-Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  R-CMD-check:
    runs-on: windows-latest
    timeout-minutes: 60

    env:
      # keep packages in workspace to persist cache reliably
      R_LIBS_USER: ${{ github.workspace }}\\RLibrary

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up R 4.3.3
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3'
          use-public-rspm: true

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\\RLibrary
          key: windows-r-4.3.3-lib-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            windows-r-4.3.3-lib-

      - name: Install tooling and dependencies
        shell: pwsh
        run: |
          Write-Host "Install rcmdcheck and developer tooling"
          Rscript -e "options(repos='https://cran.rstudio.com'); install.packages(c('rcmdcheck','remotes','pkgload','testthat','covr'), dependencies = TRUE)"
          Write-Host "Install package dependencies from DESCRIPTION"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"

      - name: Show workspace (debug)
        shell: pwsh
        run: |
          Write-Host "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
          Set-Location $env:GITHUB_WORKSPACE
          Write-Host "Top-level listing:"
          ls -Force

      - name: Run developer-style tests (pkgload + testthat)
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          Write-Host "Running developer tests from $(Get-Location)"
          Rscript -e "library(pkgload); library(testthat);
                      pkgload::load_all(export_all = TRUE, helpers = TRUE);
                      testthat::test_dir(file.path('tests','testthat'))"

      - name: Run rcmdcheck but SKIP package tests/examples
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          Write-Host "Running rcmdcheck with --no-examples and --no-tests"
          Rscript -e "rcmdcheck::rcmdcheck(path='.', args = c('--no-examples','--no-tests'),
                                           build_args = c('--no-manual'),
                                           check_dir = 'check')"

      - name: Upload check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: R-check-results
          path: check
