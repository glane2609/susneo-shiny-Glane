name: R-CI-Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  R-CMD-check:
    runs-on: windows-latest
    timeout-minutes: 60

    env:
      R_LIBS_USER: ${{ github.workspace }}\\RLibrary

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up R 4.3.3
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3'
          use-public-rspm: true

      - name: Install R package tooling
        run: |
          Rscript -e "options(repos = c(CRAN = 'https://cran.rstudio.com')); install.packages(c('remotes','pkgload','testthat','covr','rcmdcheck'))"

      - name: Install package dependencies
        run: |
          Rscript -e "remotes::install_deps(dependencies = TRUE)"

      - name: Run unit tests (pkgload + testthat)
        run: |
          Rscript -e "pkgload::load_all(export_all = FALSE, helpers = TRUE, attach_testthat = FALSE)"
          Rscript -e "if (file.exists('tests/test_all.R')) { message('Sourcing tests/test_all.R'); source('tests/test_all.R') } else { message('Running testthat on tests/testthat'); testthat::test_dir('tests/testthat', reporter = 'summary') }"

      - name: Run R CMD check (rcmdcheck)
        # run commands directly rather than mixing 'uses' + 'run'
        run: |
          Rscript -e "options(repos = c(CRAN = 'https://cran.rstudio.com'))"
          Rscript -e "message('Running rcmdcheck with --no-examples and --no-tests'); rcmdcheck::rcmdcheck(path='.', args = c('--no-examples','--no-tests'), build_args = c('--no-manual'), check_dir = 'check')"

